{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor to add the auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Add a response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  const originalRequest = error.config;\n\n  // If the error is 401 and we haven't already tried to refresh\n  if (error.response.status === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // Try to refresh the token\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        // No refresh token, user needs to login again\n        logout();\n        return Promise.reject(error);\n      }\n      const response = await axios.post(`${api.defaults.baseURL}/token/refresh/`, {\n        refresh: refreshToken\n      });\n\n      // Save the new tokens\n      const {\n        access\n      } = response.data;\n      localStorage.setItem('access_token', access);\n\n      // Retry the original request with the new token\n      originalRequest.headers.Authorization = `Bearer ${access}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // Refresh failed, user needs to login again\n      logout();\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // For other errors, just reject the promise\n  return Promise.reject(error);\n});\n\n// Helper function to handle logout\nconst logout = () => {\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n  window.location.href = '/login';\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","originalRequest","status","_retry","refreshToken","logout","post","defaults","refresh","access","data","setItem","refreshError","removeItem","window","location","href"],"sources":["C:/Users/asifc/OneDrive/gamekeys/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base config\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor to add the auth token to requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Add a response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n    \r\n    // If the error is 401 and we haven't already tried to refresh\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      \r\n      try {\r\n        // Try to refresh the token\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        if (!refreshToken) {\r\n          // No refresh token, user needs to login again\r\n          logout();\r\n          return Promise.reject(error);\r\n        }\r\n        \r\n        const response = await axios.post(\r\n          `${api.defaults.baseURL}/token/refresh/`,\r\n          { refresh: refreshToken }\r\n        );\r\n        \r\n        // Save the new tokens\r\n        const { access } = response.data;\r\n        localStorage.setItem('access_token', access);\r\n        \r\n        // Retry the original request with the new token\r\n        originalRequest.headers.Authorization = `Bearer ${access}`;\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // Refresh failed, user needs to login again\r\n        logout();\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n    \r\n    // For other errors, just reject the promise\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Helper function to handle logout\r\nconst logout = () => {\r\n  localStorage.removeItem('access_token');\r\n  localStorage.removeItem('refresh_token');\r\n  window.location.href = '/login';\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAClD,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAf,GAAG,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EACf,MAAMI,eAAe,GAAGJ,KAAK,CAACL,MAAM;;EAEpC;EACA,IAAIK,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC5DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF;MACA,MAAMC,YAAY,GAAGV,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;MAC1D,IAAI,CAACS,YAAY,EAAE;QACjB;QACAC,MAAM,CAAC,CAAC;QACR,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;MAC9B;MAEA,MAAMG,QAAQ,GAAG,MAAMnB,KAAK,CAACyB,IAAI,CAC/B,GAAGxB,GAAG,CAACyB,QAAQ,CAACvB,OAAO,iBAAiB,EACxC;QAAEwB,OAAO,EAAEJ;MAAa,CAC1B,CAAC;;MAED;MACA,MAAM;QAAEK;MAAO,CAAC,GAAGT,QAAQ,CAACU,IAAI;MAChChB,YAAY,CAACiB,OAAO,CAAC,cAAc,EAAEF,MAAM,CAAC;;MAE5C;MACAR,eAAe,CAACb,OAAO,CAACQ,aAAa,GAAG,UAAUa,MAAM,EAAE;MAC1D,OAAO3B,GAAG,CAACmB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOW,YAAY,EAAE;MACrB;MACAP,MAAM,CAAC,CAAC;MACR,OAAOP,OAAO,CAACC,MAAM,CAACa,YAAY,CAAC;IACrC;EACF;;EAEA;EACA,OAAOd,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EACnBX,YAAY,CAACmB,UAAU,CAAC,cAAc,CAAC;EACvCnB,YAAY,CAACmB,UAAU,CAAC,eAAe,CAAC;EACxCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC;AAED,eAAelC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}