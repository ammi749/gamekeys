{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asifc\\\\OneDrive\\\\gamekeys\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthService from '../services/auth.service';\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user on mount if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (AuthService.isAuthenticated()) {\n        try {\n          const userData = await AuthService.getCurrentUser();\n          setCurrentUser(userData);\n        } catch (err) {\n          console.error('Failed to load user:', err);\n          // If token is invalid, clear it\n          AuthService.logout();\n        }\n      }\n      setLoading(false);\n    };\n    loadUser();\n  }, []);\n\n  /**\r\n   * Login user\r\n   * @param {string} email - User email\r\n   * @param {string} password - User password\r\n   */\n  const login = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      await AuthService.login(email, password);\n      const userData = await AuthService.getCurrentUser();\n      setCurrentUser(userData);\n      return userData;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Login failed. Please check your credentials.');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\r\n   * Register new user\r\n   * @param {Object} userData - User registration data\r\n   */\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await AuthService.register(userData);\n      const user = await AuthService.getCurrentUser();\n      setCurrentUser(user);\n      return result;\n    } catch (err) {\n      var _err$response2;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || 'Registration failed. Please try again.');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\r\n   * Logout current user\r\n   */\n  const logout = () => {\n    AuthService.logout();\n    setCurrentUser(null);\n  };\n\n  /**\r\n   * Update user profile\r\n   * @param {Object} userData - Updated user data\r\n   */\n  const updateProfile = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const updatedUser = await AuthService.updateProfile(userData);\n      setCurrentUser(updatedUser);\n      return updatedUser;\n    } catch (err) {\n      var _err$response3;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || 'Failed to update profile. Please try again.');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\r\n   * Change user password\r\n   * @param {string} currentPassword - Current password\r\n   * @param {string} newPassword - New password\r\n   * @param {string} newPasswordConfirm - New password confirmation\r\n   */\n  const changePassword = async (currentPassword, newPassword, newPasswordConfirm) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await AuthService.changePassword(currentPassword, newPassword, newPasswordConfirm);\n      return result;\n    } catch (err) {\n      var _err$response4;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || 'Failed to change password. Please try again.');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: AuthService.isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","loadUser","isAuthenticated","userData","getCurrentUser","err","console","logout","login","email","password","_err$response","_err$response$data","response","data","detail","register","result","user","_err$response2","updateProfile","updatedUser","_err$response3","changePassword","currentPassword","newPassword","newPasswordConfirm","_err$response4","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asifc/OneDrive/gamekeys/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport AuthService from '../services/auth.service';\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load user on mount if token exists\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      if (AuthService.isAuthenticated()) {\r\n        try {\r\n          const userData = await AuthService.getCurrentUser();\r\n          setCurrentUser(userData);\r\n        } catch (err) {\r\n          console.error('Failed to load user:', err);\r\n          // If token is invalid, clear it\r\n          AuthService.logout();\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    \r\n    loadUser();\r\n  }, []);\r\n  \r\n  /**\r\n   * Login user\r\n   * @param {string} email - User email\r\n   * @param {string} password - User password\r\n   */\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      await AuthService.login(email, password);\r\n      const userData = await AuthService.getCurrentUser();\r\n      setCurrentUser(userData);\r\n      return userData;\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || 'Login failed. Please check your credentials.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Register new user\r\n   * @param {Object} userData - User registration data\r\n   */\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await AuthService.register(userData);\r\n      const user = await AuthService.getCurrentUser();\r\n      setCurrentUser(user);\r\n      return result;\r\n    } catch (err) {\r\n      setError(err.response?.data || 'Registration failed. Please try again.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Logout current user\r\n   */\r\n  const logout = () => {\r\n    AuthService.logout();\r\n    setCurrentUser(null);\r\n  };\r\n  \r\n  /**\r\n   * Update user profile\r\n   * @param {Object} userData - Updated user data\r\n   */\r\n  const updateProfile = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const updatedUser = await AuthService.updateProfile(userData);\r\n      setCurrentUser(updatedUser);\r\n      return updatedUser;\r\n    } catch (err) {\r\n      setError(err.response?.data || 'Failed to update profile. Please try again.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Change user password\r\n   * @param {string} currentPassword - Current password\r\n   * @param {string} newPassword - New password\r\n   * @param {string} newPasswordConfirm - New password confirmation\r\n   */\r\n  const changePassword = async (currentPassword, newPassword, newPasswordConfirm) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const result = await AuthService.changePassword(\r\n        currentPassword, \r\n        newPassword, \r\n        newPasswordConfirm\r\n      );\r\n      return result;\r\n    } catch (err) {\r\n      setError(err.response?.data || 'Failed to change password. Please try again.');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    isAuthenticated: AuthService.isAuthenticated\r\n  };\r\n  \r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}